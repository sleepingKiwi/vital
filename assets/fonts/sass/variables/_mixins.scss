/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size, $line-height:true){
    font-size:$font-size;
    font-size:($font-size / $base-font-size)*1rem;
    @if $line-height == true{
        line-height:ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }
}





/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */
@mixin headings($from: 1, $to: 6){
    %base-heading {
        @content
    }

    @if $from >= 1 and $to <= 6{
        @for $i from $from through $to{
            h#{$i}{
                @extend %base-heading;
            }
        }
    }
}





/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
@mixin truncate($truncation-boundary){
    max-width:$truncation-boundary;
    white-space:nowrap;
    overflow:hidden;
    text-overflow:ellipsis;
}





/**
 * Break overly long words with hyphens where supported
 * http://www.456bereastreet.com/archive/201204/automatic_line_breaks_in_narrow_columns_with_css_3_hyphens_and_word-wrap/
 * http://stackoverflow.com/questions/1795109/what-is-the-difference-between-word-break-break-all-versus-word-wrap-break
 */
@mixin break-word(){
	-moz-hyphens:auto;
	-ms-hyphens:auto;
	-webkit-hyphens:auto;
	hyphens:auto;
	word-wrap:break-word;
}





/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
@mixin arrow($arrow-edge, $arrow-location, $arrow-color, $border-color: $arrow-color){

    @if $arrow-edge == top{

        @extend %arrow--top;

        &:before{
            border-bottom-color:$border-color!important;
        }

        &:after{
            border-bottom-color:$arrow-color!important;
        }

        @if $arrow-location == left{
            @extend %arrow--left;
        }

        @if $arrow-location == center{
            @extend %arrow--center;
        }

        @if $arrow-location == right{
            @extend %arrow--right;
        }

    }

    @if $arrow-edge == right{

        @extend %arrow--far;

        &:before{
            border-left-color:$border-color!important;
        }

        &:after{
            border-left-color:$arrow-color!important;
        }

        @if $arrow-location == top{
            @extend %arrow--upper;
        }

        @if $arrow-location == center{
            @extend %arrow--middle;
        }

        @if $arrow-location == bottom{
            @extend %arrow--lower;
        }

    }

    @if $arrow-edge == bottom{

        @extend %arrow--bottom;

        &:before{
            border-top-color:$border-color!important;
        }

        &:after{
            border-top-color:$arrow-color!important;
        }

        @if $arrow-location == left{
            @extend %arrow--left;
        }

        @if $arrow-location == center{
            @extend %arrow--center;
        }

        @if $arrow-location == right{
            @extend %arrow--right;
        }

    }

    @if $arrow-edge == left{

        @extend %arrow--near;

        &:before{
            border-right-color:$border-color!important;
        }

        &:after{
            border-right-color:$arrow-color!important;
        }

        @if $arrow-location == top{
            @extend %arrow--upper;
        }

        @if $arrow-location == center{
            @extend %arrow--middle;
        }

        @if $arrow-location == bottom{
            @extend %arrow--lower;
        }

    }

}