/*------------------------------------*\
    $BASE
\*------------------------------------*/

/**
 * Selection highlights for text and links
 */
::-moz-selection { background:  $brand-c-main; color: $brand-c-inverse; text-shadow: none; }
::selection { background: $brand-c-main; color: $brand-c-inverse; text-shadow: none; }
a::-moz-selection { background: $brand-c-link; color: $brand-c-inverse; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); }
a::selection { background: $brand-c-link; color: $brand-c-inverse; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); }


/**
 * Lay down the branding foundation for main body text.
 */
body{
	font-family: $brand-ff-main;
	color: $brand-c-main;
	background-color: $brand-c-body-back;

        // loading the custom fonts in no-js makes design sense in most cases
        // because the FOIT is better than the custom fonts never appearing!
    .js--main-fonts &, .no-js &{
        font-family: $brand-ff-main-loaded;        
    }
}




/**
 * Should be in a different css file really.
 * Flexbox based layout as a default:
 */

/**
 * FIXED FOOTER WITH FLEXBOX
 * -------------------------
 * asking the site container to take up a minimum of full screen height.
 * flex: 1; uses the flex shortcode and sets flex-grow to 1 for the site content
 * which makes it take up as much available space as it can (effectively pushing
 * our footer down to the bottom!)
 */
.site {
  display: flex;
  min-height: 100vh;
  flex-direction: column;

  justify-content: space-between; //makes it so that the header won't float centrally if other content hasn't yet loaded
}

.site-content {
    //sets flex-grow to 1 which pushes footer down
    //shrink to 0 because we don't want content to shrink
    //basis to auto even though there's no definitive sizes set
  flex: 1 0 auto;

    //site content also displays as flex so that content (.content-area) can be
    //centered vertically on pages with content that doesn't fill the screen...
    //-
    //in sites without sidebars the site-content__center-container 
    //element can be removed in header/footer
  display: flex;
  flex-direction: column;
  justify-content: center;  
}


/**
 * Generally the site content can do with a consistent padding in this kind of
 * layout. look at removing the margins around header/footer and working with
 * padding on the content instead...
 */

//the following method shows an example of applying padding only where flex isn't supported...
/*
.site-content{
    padding: $bsu 0 0;
}
@supports(display: flex) {
  .site-content{
    padding: 0;
  }
}
*/